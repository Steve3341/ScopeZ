/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class scopez_MagnifierWrapper */

#ifndef _Included_scopez_MagnifierWrapper
#define _Included_scopez_MagnifierWrapper
#ifdef __cplusplus
extern "C" {
#endif
	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeInit
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_scopez_MagnifierWrapper_nativeInit
	(JNIEnv*, jobject);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeSetResolution
	 * Signature: (II)V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeSetResolution
	(JNIEnv*, jobject, jint, jint);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeSetWindowShape
	 * Signature: (Z)V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeSetWindowShape
	(JNIEnv*, jobject, jboolean);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeSetRefreshRate
	 * Signature: (I)V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeSetRefreshRate
	(JNIEnv*, jobject, jint);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeSetZoom
	 * Signature: (D)V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeSetZoom
	(JNIEnv*, jobject, jdouble);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeShowWindow
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeShowWindow
	(JNIEnv*, jobject);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeHideWindow
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeHideWindow
	(JNIEnv*, jobject);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeMoveWindow
	 * Signature: (II)V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeMoveWindow
	(JNIEnv*, jobject, jint, jint);

	/*
	 * Class:     scopez_MagnifierWrapper
	 * Method:    nativeDispose
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_scopez_MagnifierWrapper_nativeDispose
	(JNIEnv*, jobject);

#ifdef __cplusplus
}
#endif
#endif
